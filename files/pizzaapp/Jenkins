pipeline {
    agent any

    environment {
        IMAGE_NAME = "pizza-app-XX-${BUILD_NUMBER}"
        COMPONENT = "PizzaApp-Container-XX"
        UCD_SERVER = "https://devops101.eu-gb.containers.appdomain.cloud/deploy"
        UCD_CLI = "/downloads/DevOps-Deploy/udclient/udclient"
        JAVA_HOME = "/usr/lib/jvm/java-17-openjdk-17.0.13.0.11-3.el8.x86_64"
        PATH = "${env.JAVA_HOME}/bin:${env.PATH}"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    credentialsId: 'github-token-creds-XX',
                    url: 'https://devops101.eu-gb.containers.appdomain.cloud/control/<YOUR DEVOPS CONTROL EMAIL>/PizzaApp.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('src') {
                    script {
                        def fullImageName = "${IMAGE_NAME}"
                        echo "Building Docker image: ${fullImageName}"
                        sh "docker build -t ${fullImageName} ."
                    }
                }
            }
        }

        stage('Create UCD Version') {
            steps {
                withCredentials([string(credentialsId: 'ucd-token', variable: 'UCD_TOKEN')]) {
                    script {
                        def command = """
                           
                                echo "Creating version ${IMAGE_NAME}"
                                ${UCD_CLI} -weburl ${UCD_SERVER} -authtoken \$UCD_TOKEN \\
                                    createVersion -component "${COMPONENT}" -name "${IMAGE_NAME}" \\
                                    -description "Pushed via Build pipeline"
                          
                        """
                        sh label: 'Create or Skip UCD Version', script: command
                    }
                }
            }
        }

        stage('Add UCD Link') {
            steps {
                withCredentials([string(credentialsId: 'ucd-token', variable: 'UCD_TOKEN')]) {
                    sh label: 'Add Jenkins Pipeline Link', script: """
                        ${UCD_CLI} -weburl ${UCD_SERVER} -authtoken \$UCD_TOKEN \\
                            addVersionLink -component "${COMPONENT}" -version "${IMAGE_NAME}" \\
                            -linkName "Jenkins Pipeline" -link "http://165.192.86.196:8080/job/App-XX/"
                    """
                }
            }
        }
    }

    post {
        failure {
            echo "❌ UCD integration failed. Check above logs for details."
        }
        success {
            echo "✅ UCD version processed and link added successfully."
        }
    }
}
